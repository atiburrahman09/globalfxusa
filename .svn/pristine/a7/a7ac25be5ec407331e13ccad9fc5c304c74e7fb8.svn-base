using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Global.Core.BLL;
using Lumex.Tech;

namespace globalfx.a.stake
{
    public partial class stakekeymanage : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                getStakeKeyList();
            }
            gridviewsttle();
        }

        private void gridviewsttle()
        {
            if (gridviewMyStakePin.Rows.Count > 0)
            {
                gridviewMyStakePin.UseAccessibleHeader = true;
                gridviewMyStakePin.HeaderRow.TableSection = TableRowSection.TableHeader;
            }
            if (gridviewSendKeyList.Rows.Count > 0)
            {
                gridviewSendKeyList.UseAccessibleHeader = true;
                gridviewSendKeyList.HeaderRow.TableSection = TableRowSection.TableHeader;
            }
        }

        private void getStakeKeyList()
        {
            try
            {
                StakeInfoBLL stakeInfo = new StakeInfoBLL();
                DataTable dt = stakeInfo.getStakePinListByOwner((string)LumexSessionManager.Get("ActiveUserId"));
                gridviewMyStakePin.DataSource = dt;
                gridviewMyStakePin.DataBind();
                for (int i = 0; i < gridviewMyStakePin.Rows.Count; i++)
                {
                    if (string.IsNullOrEmpty(gridviewMyStakePin.Rows[i].Cells[5].Text))
                    {
                        LinkButton lnkbtn = (LinkButton)gridviewMyStakePin.Rows[i].FindControl("sendLinkButton");

                        lnkbtn.Enabled = false;
                        //break;
                    }
                }
            }
            catch (Exception)
            {

                throw;
            }
        }
        protected void sendLinkButton_Click(object sender, EventArgs e)
        {
            try
            {
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;
                // Label lblUserId = (Label)userListGridView.Rows[row.RowIndex].FindControl("lblUserId");

                addNewKeyToSendList(row);
                divPinTransfer.Visible = true;
                lnkBtn.Text = "Added to Send";
                lnkBtn.Enabled = false;
            }
            catch (Exception)
            {

                throw;
            }
        }

        protected void removeLinkButton_Click(object sender, EventArgs e)
        {
            LinkButton lnkBtn = (LinkButton)sender;
            GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;
            RemoveNewKeyToSendList(row);
        }

        private void addNewKeyToSendList(GridViewRow row)
        {
            DataTable dt = new DataTable();
            DataRow dr = null;
            try
            {

                dt.Columns.Add(new DataColumn("Serial"));
                dt.Columns.Add(new DataColumn("StakeName"));
                dt.Columns.Add(new DataColumn("StakePin"));
                for (int i = 0; i < gridviewSendKeyList.Rows.Count; i++)
                {
                    dr = dt.NewRow();

                    Label lblSerial = (Label)gridviewSendKeyList.Rows[i].FindControl("lblSerial");
                    dr["Serial"] = lblSerial.Text;
                    dr["StakeName"] = gridviewSendKeyList.Rows[i].Cells[1].Text.ToString();
                    dr["StakePin"] = gridviewSendKeyList.Rows[i].Cells[2].Text.ToString();
                    dt.Rows.Add(dr);

                }
                dr = dt.NewRow();
                Label lblSerialparent = (Label)gridviewMyStakePin.Rows[row.RowIndex].FindControl("lblSerial");
                dr["Serial"] = lblSerialparent.Text;
                dr["StakeName"] = gridviewMyStakePin.Rows[row.RowIndex].Cells[1].Text.ToString();
                dr["StakePin"] = gridviewMyStakePin.Rows[row.RowIndex].Cells[2].Text.ToString();
                dt.Rows.Add(dr);

                gridviewSendKeyList.DataSource = dt;
                gridviewSendKeyList.DataBind();
                if (gridviewSendKeyList.Rows.Count > 0)
                {
                    gridviewSendKeyList.UseAccessibleHeader = true;
                    gridviewSendKeyList.HeaderRow.TableSection = TableRowSection.TableHeader;
                }


            }
            catch (Exception)
            {

                //  throw;
            }
        }

        private void RemoveNewKeyToSendList(GridViewRow row)
        {
            DataTable dt = new DataTable();
            DataRow dr = null;
            try
            {
                string keytodelete = gridviewSendKeyList.Rows[row.RowIndex].Cells[2].Text.ToString();

                dt.Columns.Add(new DataColumn("Serial"));
                dt.Columns.Add(new DataColumn("StakeName"));
                dt.Columns.Add(new DataColumn("StakePin"));
                for (int i = 0; i < gridviewSendKeyList.Rows.Count; i++)
                {
                    dr = dt.NewRow();

                    Label lblSerial = (Label)gridviewSendKeyList.Rows[i].FindControl("lblSerial");
                    dr["Serial"] = lblSerial.Text;
                    dr["StakeName"] = gridviewSendKeyList.Rows[i].Cells[1].Text.ToString();
                    dr["StakePin"] = gridviewSendKeyList.Rows[i].Cells[2].Text.ToString();
                    dt.Rows.Add(dr);

                }


                dt.Rows.RemoveAt(row.RowIndex);

                gridviewSendKeyList.DataSource = dt;
                gridviewSendKeyList.DataBind();
                if (gridviewSendKeyList.Rows.Count > 0)
                {
                    gridviewSendKeyList.UseAccessibleHeader = true;
                    gridviewSendKeyList.HeaderRow.TableSection = TableRowSection.TableHeader;
                }

                for (int i = 0; i < gridviewMyStakePin.Rows.Count; i++)
                {
                    if (gridviewMyStakePin.Rows[i].Cells[2].Text == keytodelete)
                    {
                        LinkButton lnkbtn = (LinkButton)gridviewMyStakePin.Rows[i].FindControl("sendLinkButton");

                        lnkbtn.Enabled = true;
                        lnkbtn.Text = "Add to Send";
                        //break;
                    }
                }
                if (gridviewSendKeyList.Rows.Count == 0)
                {
                    divPinTransfer.Visible = false;
                }

            }
            catch (Exception)
            {

                //  throw;
            }

        }

    }
}