using System;
using System.Data;
using System.Web.UI;
using System.Web.UI.WebControls;
using Global.Core.BLL;
using globalfx.page;
using Lumex.Tech;
using System.Data;
namespace globalfx.setting.User
{
    public partial class List : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

            try
            {
                msgbox.Visible = false;

                if (!IsPostBack)
                {

                    GetUserList();
                }



                if (userListGridView.Rows.Count > 0)
                {
                    userListGridView.UseAccessibleHeader = true;
                    userListGridView.HeaderRow.TableSection = TableRowSection.TableHeader;
                }
            }
            catch (Exception ex)
            {

                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }
        }

        private void GridviewHeadStyle()
        {
            if (userListGridView.Rows.Count > 0)
            {
                userListGridView.UseAccessibleHeader = true;
                userListGridView.HeaderRow.TableSection = TableRowSection.TableHeader;

            }
        }

        protected void MyAlertBox(string alertScript)
        {
            ScriptManager.RegisterStartupScript(this, this.GetType(), "ServerControlScript", alertScript, true);
        }

        protected void GetUserInfoList()
        {

            try
            {
                DataTable dt = new DataTable();
                UserBLL aUserBll = new UserBLL();
                dt = aUserBll.GetUserInfoList();
                if (dt.Rows.Count > 0)
                {
                    userListGridView.DataSource = dt;
                    userListGridView.DataBind();
                }
                GridViewStyle();
            }
            catch (Exception ex)
            {
                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }
        }

        private void GridViewStyle()
        {
            if (userListGridView.Rows.Count > 0)
            {
                userListGridView.UseAccessibleHeader = true;
                userListGridView.HeaderRow.TableSection = TableRowSection.TableHeader;
            }
        }
        protected void GetUserList()
        {
            UserBLL user = new UserBLL();

            try
            {
                DataTable dt = user.GetActiveUserList();
                userListGridView.DataSource = dt;
                userListGridView.DataBind();

                if (dt.Rows.Count < 1)
                {
                    msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Data Not Found!!!"; msgDetailLabel.Text = "";
                }
                GridviewHeadStyle();
            }
            catch (Exception ex)
            {
                msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
            finally
            {
                user = null;
            }
        }
        //protected void UsersGrid_RowCreated(object sender, GridViewRowEventArgs e)
        //{
        //    if(LumexSessionManager.Get("UserGroupId").ToString()!="UG001")
        //    {
        //        e.Row.Cells[6].Visible = false;
        //    }
        //}
        protected void drpdownCenter_SelectedIndexChanged(object sender, EventArgs e)
        {
            GetUserList();
        }
        protected void viewLinkButton_Click(object sender, EventArgs e)
        {
            try
            {
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;
                Label lblUserId = (Label)userListGridView.Rows[row.RowIndex].FindControl("lblUserId");
                LumexSessionManager.Add("UserIdForView", lblUserId.Text);
                Response.Redirect("~/setting/User/userProfile.aspx");

            }
            catch (Exception ex)
            {
                msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
        }
        protected void btnupdate_click(object sender, EventArgs e)
        {

            Button Btn = (Button)sender;
            GridViewRow row = (GridViewRow)Btn.NamingContainer;

            try
            {

                Label lblUserId = (Label)userListGridView.Rows[row.RowIndex].FindControl("lblUserId");
                LumexSessionManager.Add("UserIdForUpdate", lblUserId.Text);
                Response.Redirect("~/setting/User/Update.aspx");

            }
            catch (Exception ex)
            {

                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }

        }
        protected void btnIsActive_Click(object sender, EventArgs e)
        {



            LinkButton button = (LinkButton)sender;
            GridViewRow row = (GridViewRow)button.NamingContainer;
            string theValue = ((LinkButton)sender).CommandArgument.ToString();
            try
            {
                string UserId = userListGridView.Rows[row.RowIndex].Cells[0].Text.ToString();



                // CenterBLL centerbll = new CenterBLL();
                bool status = false;//= centerbll.IsActiveDeleteCenterById(theValue, id);
                if (status)
                {
                    GetUserList();

                }



            }
            catch (Exception ex)
            {

                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }

        }
        protected void btnIsDelete_Click(object sender, EventArgs e)
        {

            bool status = false;
            
            try
            {
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;
                string userId = userListGridView.Rows[row.RowIndex].Cells[0].Text.ToString();
                UserBLL userbll = new UserBLL();
                userbll.DeleteUser(userId);
                status = true;
                if (status)
                {
                    GetUserList();

                }
            }
            catch (Exception ex)
            {

                string message = ex.Message;
                if (ex.InnerException != null) { message += " --> " + ex.InnerException.Message; }
                MyAlertBox("ErrorAlert(\"" + ex.GetType() + "\", \"" + message + "\", \"\");");
            }

        }

        protected void EditLinkButton_OnClick(object sender, EventArgs e)
        {
            try
            {
                UserBLL aUser = new UserBLL();
                LinkButton lnkBtn = (LinkButton)sender;
                GridViewRow row = (GridViewRow)lnkBtn.NamingContainer;

                string UserId = userListGridView.Rows[row.RowIndex].Cells[0].Text.ToString();
                LumexSessionManager.Add("UserIdForUpdate", UserId);
                Response.Redirect("~/setting/User/UserInfoList.aspx");

            }
            catch (Exception ex)
            {
                msgbox.Attributes.Add("Class", "alert alert-warning"); msgbox.Visible = true; msgTitleLabel.Text = "Exception!!!"; msgDetailLabel.Text = ex.Message;
            }
        }


    }
}