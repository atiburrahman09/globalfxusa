using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Global.Core.DAL;
using Lumex.Tech;

namespace Global.Core.BLL
{
    public class UserAccountBLL
    {
        public bool GetTransiction()
        {
            UserAccountDLL aUser = new UserAccountDLL();
            bool status = false;
            DataTable dt = new DataTable();
            try
            {
                LumexDBPlayer db = LumexDBPlayer.Start(true);
                dt = aUser.GetTransiction(this, db);
                db.Stop();
                if (dt.Rows.Count > 0)
                {
                    status = true;

                }

            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                dt.Clear();
            }
            return status;
        }

        public string Type { get; set; }

        public string BankAccountNo { get; set; }

        public string TransferTo { get; set; }

        public string SwiftCode { get; set; }

        public string Pin { get; set; }

        public string TransferNote { get; set; }

        public DataTable GetUserPlacementInfoById(string UserId)
        {
            UserAccountDLL aUser = new UserAccountDLL();

            DataTable dt = new DataTable();
            try
            {
                LumexDBPlayer db = LumexDBPlayer.Start(true);
                dt = aUser.GetUserPlacementInfoById(UserId, db);
                db.Stop();


            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                //dt.Clear();
            }
            return dt;
        }

        public DataTable getAccountSummaryById(string UserId)
        {
            UserAccountDLL aUser = new UserAccountDLL();

            DataTable dt = new DataTable();
            try
            {
                LumexDBPlayer db = LumexDBPlayer.Start(true);
                dt = aUser.getAccountSummaryById(UserId, db);
                db.Stop();


            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                dt.Clear();
            }
            return dt;
        }


        public DataTable getUserIncomeStatementById(string UserId,string FromDate, string ToDate)
        {
            UserAccountDLL aUser = new UserAccountDLL();

            DataTable dt = new DataTable();
            try
            {
                LumexDBPlayer db = LumexDBPlayer.Start(true);
                dt = aUser.getUserIncomeStatementById(UserId,FromDate,ToDate ,db);
                db.Stop();


            }
            catch (Exception)
            {

                throw;
            }
            finally
            {
                dt.Clear();
            }
            return dt;
        }


        public bool UpdateUserAccount(string StakeId)
        {
            UserAccountDLL aUser = new UserAccountDLL();
            bool status = false;
            DataTable dt = new DataTable();
            try
            {
        
                LumexDBPlayer db = LumexDBPlayer.Start(true);
                dt = aUser.UpdateUserAccount(StakeId, db);
                if (dt.Rows.Count > 0)
                {
                    status = true;
                }
                db.Stop();
                

            }
            catch (Exception)
            {

                throw;
            }
            return status;
        }

    }
}
